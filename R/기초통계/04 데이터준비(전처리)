#==================================================
# 문제 정의
#==================================================
# Mission : Titanic 생존자를 찾아라!

setwd("c:\\temp\\R")
# 타이타닉 데이터 불러오기 -----------------------------------------------------------

getwd()
titanic <- read.csv("titanic.0.csv")
str(titanic)
head(titanic)

titanic.0 <- read.csv("titanic.0.csv" 
                      , stringsAsFactors = F 
                      , na.strings=c("","NA","Unknown","NULL"))

# na.strings=c("","NA"): 읽을 때 "", "NA"는 NA로 처리
str(titanic.0)

# Sex, Survived, Embarked, Pclass은 factor 형식으로 변경하자.
titanic.0$Sex <- as.factor(titanic.0$Sex)
titanic.0$Survived <- as.factor(titanic.0$Survived)
titanic.0$Embarked <- as.factor(titanic.0$Embarked)
titanic.0$Pclass <- as.factor(titanic.0$Pclass)
str(titanic.0)

##################################################
# 데이터 전처리
##################################################

# NA, 이상치 찾기 ------------------------------

# NA 
is.na(titanic.0)
colSums(is.na(titanic.0))

install.packages("Amelia")
library(Amelia)

missmap(titanic.0, col=c("yellow", "black"), legend=FALSE)

#이상치 
summary(titanic.0$Age)
str(titanic.0)

a <- boxplot(titanic.0$Age)
str(a) #결과가 list 타입이다

str(a$stats)
a$stats[1]  #min
a$stats[5]  #max

which(titanic.0$Age < a$stats[1])
which(titanic.0$Age > a$stats[5])
titanic.0[which(titanic.0$Age > a$stats[5]),   ]

# NA 처리 : 대체 -----------------
grep('hon', mpg$manufacturer)
mpg[grep('aud', mpg$manufacturer),]

gsub('aud', 'Aud', mpg$manufacturer)

titanic.0$Name

# Age : 호칭이 같은 사람의 평균Age로 채우기
# ① 이름에서 타이틀(호칭)을 분리하자. 그리고 별도 칼럼으로 만들자.
titanic.0[851, "Name"]
master_vector <- grep("Master[.]",titanic.0$Name)
miss_vector <- grep("Miss[.]", titanic.0$Name)
mrs_vector <- grep("Mrs[.]", titanic.0$Name)
mr_vector <- grep("Mr[.]", titanic.0$Name) 
dr_vector <- grep("Dr[.]", titanic.0$Name)
titanic.0$Name[grep("Mr.",titanic.0$Name)]
#빈 값으로 채워진 열(변수) 추가
titanic.0$Title <- ''
head(titanic.0)

titanic.0[master_vector,]$Title <-"Master"
titanic.0[miss_vector,]$Title <-"Miss"
titanic.0[mrs_vector,]$Title <-"Mrs"
titanic.0[mr_vector,]$Title <-"Mr"
titanic.0[dr_vector,]$Title <-"Dr"

head(titanic.0[,c("Name", "Title")])


# 칼럼 삭제는? 직관적이지는 않음.
titanic.0$Title <- NULL
head(titanic.0)

## ② 호칭의 평균 나이를 계산한다.
titanic.0$Title == "Master"
titanic.0$Age[titanic.0$Title == "Master"]
master_age <- titanic.0$Age[titanic.0$Title == "Master"]
master_age

master_age_mean <- mean(master_age, na.rm = TRUE)
master_age_mean

round(master_age_mean,digits = 2)

master_age <- round(mean(titanic.0$Age[titanic.0$Title == "Master"], na.rm = TRUE), digits = 2)
miss_age <- round(mean(titanic.0$Age[titanic.0$Title == "Miss"], na.rm = TRUE), digits =2)
mrs_age <- round(mean(titanic.0$Age[titanic.0$Title == "Mrs"], na.rm = TRUE), digits = 2)
mr_age <- round(mean(titanic.0$Age[titanic.0$Title == "Mr"], na.rm = TRUE), digits = 2)
dr_age <- round(mean(titanic.0$Age[titanic.0$Title == "Dr"], na.rm = TRUE), digits = 2)


## ③ 나이가 NA인 사람의 호칭을 보고 평균나이를 넣어준다. 

titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Master","Age"] <-  master_age
titanic.0$Age
titanic.0[,"Age"]
names(titanic.0)
titanic.0[,6]

titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Miss","Age"] <-  miss_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Mrs","Age"] <-  mrs_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Mr","Age"] <-  mr_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Dr","Age"] <-  dr_age

sum(is.na(titanic.0$Age))

# 두건의 승선지역 NA값은 가장 많은 S로 처리하자.
# 하지만, 더 좋은 방법은 승선지역을 종속변수로 두고 예측하는 것!
titanic.0$Embarked
sum(is.na(titanic.0$Embarked))
table(titanic.0$Embarked)
is.na(titanic.0$Embarked)
titanic.0$Embarked[is.na(titanic.0$Embarked)] <- 'S'
table(titanic.0$Embarked)

# 데이터 채우기2 범주형으로 변환 ---------------------------------------------
titanic.0$Age
cut(titanic.0$Age, breaks = c(0,10,20,30,40,50,60,70,80,90,100))
library(dplyr)
a <- mutate(titanic.0, 
            AgeGroup = cut(titanic.0$Age
                           , breaks = c(0,10,20,30,40,50,60,70,80,90,100)))
head(a)
head(a[,c("Age", "AgeGroup")],10)
a1<- mutate(titanic.0, AgeGroup = cut(titanic.0$Age, breaks = c(0,10,20,30,40,50,60,70,80,90,100)
                                      , labels = c("Age0_10","Age11_20","Age21_30","Age31_40"
                                                   ,"Age41_50","Age51_60","Age61_70","Age71_80"
                                                   ,"Age81_90","Age91_100")))
head(a1[,c("Age", "AgeGroup")])
titanic.0 <- mutate(titanic.0
                    , AgeGroup = cut(titanic.0$Age
                                     , breaks = c(0,10,20,30,40,50,60,70,80,90,100)
                                     , labels = c("Age0_10","Age11_20","Age21_30","Age31_40"
                                                  ,"Age41_50","Age51_60","Age61_70","Age71_80"
                                                  ,"Age81_90","Age91_100")))

str(titanic.0)
head(titanic.0)

# 변수 추가 생성하기 -----------------------------------------------------------

titanic.0 <- titanic.0 %>% 
  mutate(Family = SibSp + Parch + 1)

titanic.0 <- mutate(titanic.0, Family = SibSp + Parch + 1)

head(titanic.0)

# 가변수화 -----------------------------------------------
install.packages("dummies")
library(dummies)
library(ggplot2)
dia <- data.frame(diamonds)
head(dia)
dum.cut <-dummy(dia$cut, sep = ".")
dia.new <- cbind(dia, dum.cut )
head(dia.new)
?merge

##############################
# 연습문제2
##############################

rm(list=ls())
titanic.0 <- read.csv("titanic.0.csv" 
                      , stringsAsFactors = F 
                      , na.strings=c("","NA","Unknown"))
titanic.0$Sex <- as.factor(titanic.0$Sex)
titanic.0$Survived <- as.factor(titanic.0$Survived)
titanic.0$Embarked <- as.factor(titanic.0$Embarked)
titanic.0$Pclass <- as.factor(titanic.0$Pclass)

# titanic 데이터셋을 이용하여 다음 연습문제를 푸시오.

# 1. 호칭으로 구성된 Title 칼럼(변수)을 만드시오.

master_vector <- grep("Master[.]",titanic.0$Name)
miss_vector <- grep("Miss[.]", titanic.0$Name)
mrs_vector <- grep("Mrs[.]", titanic.0$Name)
mr_vector <- grep("Mr[.]", titanic.0$Name) 
dr_vector <- grep("Dr[.]", titanic.0$Name)

titanic.0$Title <- ''

titanic.0[master_vector,]$Title <-"Master"
titanic.0[miss_vector,]$Title <-"Miss"
titanic.0[mrs_vector,]$Title <-"Mrs"
titanic.0[mr_vector,]$Title <-"Mr"
titanic.0[dr_vector,]$Title <-"Dr"


# 2. Age를 소수점 1자리에서 반올림하여 자연수로 된 Age2 칼럼(변수)을 만드시오.
titanic.0 <- mutate(titanic.0, Age2 = round(Age))

# 3. 각 호칭의 나이들의 max 값을 구하시오.
master_age <- round(max(titanic.0$Age[titanic.0$Title == "Master"], na.rm = TRUE))
miss_age <- round(max(titanic.0$Age[titanic.0$Title == "Miss"], na.rm = TRUE))
mrs_age <- round(max(titanic.0$Age[titanic.0$Title == "Mrs"], na.rm = TRUE))
mr_age <- round(max(titanic.0$Age[titanic.0$Title == "Mr"], na.rm = TRUE))
dr_age <- round(max(titanic.0$Age[titanic.0$Title == "Dr"], na.rm = TRUE))

# 4. 각 호칭의 나이가 NA인 값을 위 3번의 max 값으로 변경하시오.
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Master","Age"] <-  master_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Miss","Age"] <-  miss_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Mrs","Age"] <-  mrs_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Mr","Age"] <-  mr_age
titanic.0[is.na(titanic.0$Age) & titanic.0$Title == "Dr","Age"] <-  dr_age

# 5. 나이를 ~ 20세, 21~40세, 41~60세, 61세~ 총 4개의 범주로 데이터를 변환하여 AgeGroup에 저장하시오.

install.packages("tibble")
library(tibble)

str(titanic.0)
titanic.0$AgeGroup <- NULL
titanic.0 <- add_column(titanic.0, AgeGroup = cut(titanic.0$Age
                                                  , breaks = c(0,20,40,60,100))
                , .after = "Age")

str(titanic.0)
head(titanic.0)
